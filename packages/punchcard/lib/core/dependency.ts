import iam = require('@aws-cdk/aws-iam');

import { Assembly, Namespace } from '../core/assembly';
import { Cache } from '../core/cache';
import { Cons, Head, HList, Tail } from '../util/hlist';
import { Client, Clients } from './client';

import { Build } from './build';
import { Run } from './run';

export interface Dependency<D> {
  install: Build<Install>;
  bootstrap: Run<Bootstrap<D>>;
}
export namespace Dependency {
  export type None = typeof none;
  export const none: Dependency<{}> = {
    [Symbol.for('punchcard:dependency:none')]: true,
    bootstrap: Run.of(async () => ({})),
    install: Build.of(() => undefined)
  };

  // gross, but hopefully more efficient than a HList traversal and just as effective
  // see <pkg-root>/codegen/dependency-concat
  // export function concat<D1 extends Dependency<any>>(d1: D1): Dependency<[Client<D1>]>;
  // export function concat<D1 extends Dependency<any>, D2 extends Dependency<any>>(d1: D1, d2: D2): Dependency<[Client<D1>, Client<D2>]>;
  // export function concat<D1 extends Dependency<any>, D2 extends Dependency<any>, D3 extends Dependency<any>>(d1: D1, d2: D2, d3: D3): Dependency<[Client<D1>, Client<D2>, Client<D3>]>;
  // export function concat<D1 extends Dependency<any>, D2 extends Dependency<any>, D3 extends Dependency<any>, D4 extends Dependency<any>>(d1: D1, d2: D2, d3: D3, d4: D4): Dependency<[Client<D1>, Client<D2>, Client<D3>, Client<D4>]>;
  // export function concat<D1 extends Dependency<any>, D2 extends Dependency<any>, D3 extends Dependency<any>, D4 extends Dependency<any>, D5 extends Dependency<any>>(d1: D1, d2: D2, d3: D3, d4: D4, d5: D5): Dependency<[Client<D1>, Client<D2>, Client<D3>, Client<D4>, Client<D5>]>;
  // export function concat<D1 extends Dependency<any>, D2 extends Dependency<any>, D3 extends Dependency<any>, D4 extends Dependency<any>, D5 extends Dependency<any>, D6 extends Dependency<any>>(d1: D1, d2: D2, d3: D3, d4: D4, d5: D5, d6: D6): Dependency<[Client<D1>, Client<D2>, Client<D3>, Client<D4>, Client<D5>, Client<D6>]>;
  // export function concat<D1 extends Dependency<any>, D2 extends Dependency<any>, D3 extends Dependency<any>, D4 extends Dependency<any>, D5 extends Dependency<any>, D6 extends Dependency<any>, D7 extends Dependency<any>>(d1: D1, d2: D2, d3: D3, d4: D4, d5: D5, d6: D6, d7: D7): Dependency<[Client<D1>, Client<D2>, Client<D3>, Client<D4>, Client<D5>, Client<D6>, Client<D7>]>;
  // export function concat<D1 extends Dependency<any>, D2 extends Dependency<any>, D3 extends Dependency<any>, D4 extends Dependency<any>, D5 extends Dependency<any>, D6 extends Dependency<any>, D7 extends Dependency<any>, D8 extends Dependency<any>>(d1: D1, d2: D2, d3: D3, d4: D4, d5: D5, d6: D6, d7: D7, d8: D8): Dependency<[Client<D1>, Client<D2>, Client<D3>, Client<D4>, Client<D5>, Client<D6>, Client<D7>, Client<D8>]>;
  // export function concat<D1 extends Dependency<any>, D2 extends Dependency<any>, D3 extends Dependency<any>, D4 extends Dependency<any>, D5 extends Dependency<any>, D6 extends Dependency<any>, D7 extends Dependency<any>, D8 extends Dependency<any>, D9 extends Dependency<any>>(d1: D1, d2: D2, d3: D3, d4: D4, d5: D5, d6: D6, d7: D7, d8: D8, d9: D9): Dependency<[Client<D1>, Client<D2>, Client<D3>, Client<D4>, Client<D5>, Client<D6>, Client<D7>, Client<D8>, Client<D9>]>;
  // export function concat<D1 extends Dependency<any>, D2 extends Dependency<any>, D3 extends Dependency<any>, D4 extends Dependency<any>, D5 extends Dependency<any>, D6 extends Dependency<any>, D7 extends Dependency<any>, D8 extends Dependency<any>, D9 extends Dependency<any>, D10 extends Dependency<any>>(d1: D1, d2: D2, d3: D3, d4: D4, d5: D5, d6: D6, d7: D7, d8: D8, d9: D9, d10: D10): Dependency<[Client<D1>, Client<D2>, Client<D3>, Client<D4>, Client<D5>, Client<D6>, Client<D7>, Client<D8>, Client<D9>, Client<D10>]>;
  // export function concat<D1 extends Dependency<any>, D2 extends Dependency<any>, D3 extends Dependency<any>, D4 extends Dependency<any>, D5 extends Dependency<any>, D6 extends Dependency<any>, D7 extends Dependency<any>, D8 extends Dependency<any>, D9 extends Dependency<any>, D10 extends Dependency<any>, D11 extends Dependency<any>>(d1: D1, d2: D2, d3: D3, d4: D4, d5: D5, d6: D6, d7: D7, d8: D8, d9: D9, d10: D10, d11: D11): Dependency<[Client<D1>, Client<D2>, Client<D3>, Client<D4>, Client<D5>, Client<D6>, Client<D7>, Client<D8>, Client<D9>, Client<D10>, Client<D11>]>;
  // export function concat<D1 extends Dependency<any>, D2 extends Dependency<any>, D3 extends Dependency<any>, D4 extends Dependency<any>, D5 extends Dependency<any>, D6 extends Dependency<any>, D7 extends Dependency<any>, D8 extends Dependency<any>, D9 extends Dependency<any>, D10 extends Dependency<any>, D11 extends Dependency<any>, D12 extends Dependency<any>>(d1: D1, d2: D2, d3: D3, d4: D4, d5: D5, d6: D6, d7: D7, d8: D8, d9: D9, d10: D10, d11: D11, d12: D12): Dependency<[Client<D1>, Client<D2>, Client<D3>, Client<D4>, Client<D5>, Client<D6>, Client<D7>, Client<D8>, Client<D9>, Client<D10>, Client<D11>, Client<D12>]>;
  // export function concat<D1 extends Dependency<any>, D2 extends Dependency<any>, D3 extends Dependency<any>, D4 extends Dependency<any>, D5 extends Dependency<any>, D6 extends Dependency<any>, D7 extends Dependency<any>, D8 extends Dependency<any>, D9 extends Dependency<any>, D10 extends Dependency<any>, D11 extends Dependency<any>, D12 extends Dependency<any>, D13 extends Dependency<any>>(d1: D1, d2: D2, d3: D3, d4: D4, d5: D5, d6: D6, d7: D7, d8: D8, d9: D9, d10: D10, d11: D11, d12: D12, d13: D13): Dependency<[Client<D1>, Client<D2>, Client<D3>, Client<D4>, Client<D5>, Client<D6>, Client<D7>, Client<D8>, Client<D9>, Client<D10>, Client<D11>, Client<D12>, Client<D13>]>;
  // export function concat<D1 extends Dependency<any>, D2 extends Dependency<any>, D3 extends Dependency<any>, D4 extends Dependency<any>, D5 extends Dependency<any>, D6 extends Dependency<any>, D7 extends Dependency<any>, D8 extends Dependency<any>, D9 extends Dependency<any>, D10 extends Dependency<any>, D11 extends Dependency<any>, D12 extends Dependency<any>, D13 extends Dependency<any>, D14 extends Dependency<any>>(d1: D1, d2: D2, d3: D3, d4: D4, d5: D5, d6: D6, d7: D7, d8: D8, d9: D9, d10: D10, d11: D11, d12: D12, d13: D13, d14: D14): Dependency<[Client<D1>, Client<D2>, Client<D3>, Client<D4>, Client<D5>, Client<D6>, Client<D7>, Client<D8>, Client<D9>, Client<D10>, Client<D11>, Client<D12>, Client<D13>, Client<D14>]>;
  // export function concat<D1 extends Dependency<any>, D2 extends Dependency<any>, D3 extends Dependency<any>, D4 extends Dependency<any>, D5 extends Dependency<any>, D6 extends Dependency<any>, D7 extends Dependency<any>, D8 extends Dependency<any>, D9 extends Dependency<any>, D10 extends Dependency<any>, D11 extends Dependency<any>, D12 extends Dependency<any>, D13 extends Dependency<any>, D14 extends Dependency<any>, D15 extends Dependency<any>>(d1: D1, d2: D2, d3: D3, d4: D4, d5: D5, d6: D6, d7: D7, d8: D8, d9: D9, d10: D10, d11: D11, d12: D12, d13: D13, d14: D14, d15: D15): Dependency<[Client<D1>, Client<D2>, Client<D3>, Client<D4>, Client<D5>, Client<D6>, Client<D7>, Client<D8>, Client<D9>, Client<D10>, Client<D11>, Client<D12>, Client<D13>, Client<D14>, Client<D15>]>;
  // export function concat<D1 extends Dependency<any>, D2 extends Dependency<any>, D3 extends Dependency<any>, D4 extends Dependency<any>, D5 extends Dependency<any>, D6 extends Dependency<any>, D7 extends Dependency<any>, D8 extends Dependency<any>, D9 extends Dependency<any>, D10 extends Dependency<any>, D11 extends Dependency<any>, D12 extends Dependency<any>, D13 extends Dependency<any>, D14 extends Dependency<any>, D15 extends Dependency<any>, D16 extends Dependency<any>>(d1: D1, d2: D2, d3: D3, d4: D4, d5: D5, d6: D6, d7: D7, d8: D8, d9: D9, d10: D10, d11: D11, d12: D12, d13: D13, d14: D14, d15: D15, d16: D16): Dependency<[Client<D1>, Client<D2>, Client<D3>, Client<D4>, Client<D5>, Client<D6>, Client<D7>, Client<D8>, Client<D9>, Client<D10>, Client<D11>, Client<D12>, Client<D13>, Client<D14>, Client<D15>, Client<D16>]>;
  // export function concat<D1 extends Dependency<any>, D2 extends Dependency<any>, D3 extends Dependency<any>, D4 extends Dependency<any>, D5 extends Dependency<any>, D6 extends Dependency<any>, D7 extends Dependency<any>, D8 extends Dependency<any>, D9 extends Dependency<any>, D10 extends Dependency<any>, D11 extends Dependency<any>, D12 extends Dependency<any>, D13 extends Dependency<any>, D14 extends Dependency<any>, D15 extends Dependency<any>, D16 extends Dependency<any>, D17 extends Dependency<any>>(d1: D1, d2: D2, d3: D3, d4: D4, d5: D5, d6: D6, d7: D7, d8: D8, d9: D9, d10: D10, d11: D11, d12: D12, d13: D13, d14: D14, d15: D15, d16: D16, d17: D17): Dependency<[Client<D1>, Client<D2>, Client<D3>, Client<D4>, Client<D5>, Client<D6>, Client<D7>, Client<D8>, Client<D9>, Client<D10>, Client<D11>, Client<D12>, Client<D13>, Client<D14>, Client<D15>, Client<D16>, Client<D17>]>;
  // export function concat<D1 extends Dependency<any>, D2 extends Dependency<any>, D3 extends Dependency<any>, D4 extends Dependency<any>, D5 extends Dependency<any>, D6 extends Dependency<any>, D7 extends Dependency<any>, D8 extends Dependency<any>, D9 extends Dependency<any>, D10 extends Dependency<any>, D11 extends Dependency<any>, D12 extends Dependency<any>, D13 extends Dependency<any>, D14 extends Dependency<any>, D15 extends Dependency<any>, D16 extends Dependency<any>, D17 extends Dependency<any>, D18 extends Dependency<any>>(d1: D1, d2: D2, d3: D3, d4: D4, d5: D5, d6: D6, d7: D7, d8: D8, d9: D9, d10: D10, d11: D11, d12: D12, d13: D13, d14: D14, d15: D15, d16: D16, d17: D17, d18: D18): Dependency<[Client<D1>, Client<D2>, Client<D3>, Client<D4>, Client<D5>, Client<D6>, Client<D7>, Client<D8>, Client<D9>, Client<D10>, Client<D11>, Client<D12>, Client<D13>, Client<D14>, Client<D15>, Client<D16>, Client<D17>, Client<D18>]>;
  // export function concat<D1 extends Dependency<any>, D2 extends Dependency<any>, D3 extends Dependency<any>, D4 extends Dependency<any>, D5 extends Dependency<any>, D6 extends Dependency<any>, D7 extends Dependency<any>, D8 extends Dependency<any>, D9 extends Dependency<any>, D10 extends Dependency<any>, D11 extends Dependency<any>, D12 extends Dependency<any>, D13 extends Dependency<any>, D14 extends Dependency<any>, D15 extends Dependency<any>, D16 extends Dependency<any>, D17 extends Dependency<any>, D18 extends Dependency<any>, D19 extends Dependency<any>>(d1: D1, d2: D2, d3: D3, d4: D4, d5: D5, d6: D6, d7: D7, d8: D8, d9: D9, d10: D10, d11: D11, d12: D12, d13: D13, d14: D14, d15: D15, d16: D16, d17: D17, d18: D18, d19: D19): Dependency<[Client<D1>, Client<D2>, Client<D3>, Client<D4>, Client<D5>, Client<D6>, Client<D7>, Client<D8>, Client<D9>, Client<D10>, Client<D11>, Client<D12>, Client<D13>, Client<D14>, Client<D15>, Client<D16>, Client<D17>, Client<D18>, Client<D19>]>;
  // export function concat<D1 extends Dependency<any>, D2 extends Dependency<any>, D3 extends Dependency<any>, D4 extends Dependency<any>, D5 extends Dependency<any>, D6 extends Dependency<any>, D7 extends Dependency<any>, D8 extends Dependency<any>, D9 extends Dependency<any>, D10 extends Dependency<any>, D11 extends Dependency<any>, D12 extends Dependency<any>, D13 extends Dependency<any>, D14 extends Dependency<any>, D15 extends Dependency<any>, D16 extends Dependency<any>, D17 extends Dependency<any>, D18 extends Dependency<any>, D19 extends Dependency<any>, D20 extends Dependency<any>>(d1: D1, d2: D2, d3: D3, d4: D4, d5: D5, d6: D6, d7: D7, d8: D8, d9: D9, d10: D10, d11: D11, d12: D12, d13: D13, d14: D14, d15: D15, d16: D16, d17: D17, d18: D18, d19: D19, d20: D20): Dependency<[Client<D1>, Client<D2>, Client<D3>, Client<D4>, Client<D5>, Client<D6>, Client<D7>, Client<D8>, Client<D9>, Client<D10>, Client<D11>, Client<D12>, Client<D13>, Client<D14>, Client<D15>, Client<D16>, Client<D17>, Client<D18>, Client<D19>, Client<D20>]>;

  export function concat<D extends any[]>(...ds: D): Concat<D>;

  export function concat(...ds: Array<Dependency<any>>): Dependency<any[]> {
    return {
      install:  Build
        .concat(...ds.map(_ => _.install))
        .map(is => (ns, grantable) => (is as any).forEach((i: any) => i(ns, grantable))),
      bootstrap: Run
        .concat(...ds.map(_ => _.bootstrap))
        .map(bs => (ns, cache) => Promise.all((bs as any).map((bootstrap: any) => bootstrap(ns, cache) ))),
    };
  }

  export type Concat<T extends any[]> = Dependency<Clients<HList<T>>>;
}

export type Install = (namespace: Namespace, grantable: iam.IGrantable) => void;
export type Bootstrap<D> = (namespace: Namespace, cache: Cache) => Promise<D>;
